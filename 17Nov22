// STRINGS
//Q 6  Valid Palindrom              // BRUTE FORCE...

class Solution {
    public boolean isPalindrome(String s) {
         s= s.replaceAll("\\s" , "");            //Removes all spaces
         if(s==""){
            return true;
        }
        Stack<Character> st= new Stack<>();
        StringBuilder str = new StringBuilder();
        StringBuilder rev = new StringBuilder();
        s = s.toLowerCase();                    //convert to lower Case
        s = s.replaceAll("[^a-zA-Z0-9]", "");   //Remove non-Aphanumeric Char
        System.out.println(s);
        for(int i=0; i<s.length(); i++){
            char ch = s.charAt(i);
            if(!Character.isDigit(ch)){
                str.append(ch);
            }
        }


        for(int i=0; i<s.length(); i++){
            st.push(s.charAt(i));
        } 
        while(!st.isEmpty()){
            rev.append(st.pop());
        }

        String str2 = str.toString();
        String rev2 = rev.toString();
        // System.out.println(str);
        // System.out.println(str2.getClass());
        // System.out.println(str2.length());

        // System.out.println(rev);
        // System.out.println(rev2.getClass());
        // System.out.println(str2.length());




        if(str2.equals(rev2)){
            return true;
        }
         
    
        return false;
        
    }
}



// OPTIMIZED APPROCH!!!

 class Solution {
    public boolean isPalindrome(String s) {
        s = s.toLowerCase().replaceAll("[^a-z0-9]", "");//We First...toLowerCase & Then...Replace all the
                                                        // Character which not (^) Belongs TO [a-z0-9] with ""

        int i = 0;                              //First pointer is at 0th idx

        int j = s.length() - 1;                 //2nd pointer is as Last idx

        while(i <= j) {                         //loop till first pointer crosses last pointer

            if (s.charAt(i) != s.charAt(j)) {
                return false;                  // AT any Point both the Character not Matched... return
            }

            i++;
            j--;
        }
        return true;
    }
    }


